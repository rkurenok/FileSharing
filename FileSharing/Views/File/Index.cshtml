@*@model IEnumerable<FileSharing.Models.PageViewModel>*@
@model FileSharing.Models.PageViewModel
@using FileSharing.Helpers

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table">
    <tr>
        <th class="text-right">
            @*@Html.DisplayNameFor(model => model.Id)*@
            Id
        </th>
        <th>
            @*@Html.DisplayNameFor(model => model.Name)*@
            Название
        </th>
        <th>
            @*@Html.DisplayNameFor(model => model.SizeInBytes)*@
            Размер
        </th>
        <th>
            @*@Html.DisplayNameFor(model => model.User.Login)*@
            Автор
        </th>
        <th>
            @*@Html.DisplayNameFor(model => model.Date)*@
            Дата загрузки
        </th>
        <th>
            @*@Html.DisplayNameFor(model => model.Date)*@
            Доступ к файлу
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model.Files)
    {
    <tr>
        <th>
            @Html.DisplayFor(modelItem => item.Id)
        </th>
        <td>
            @*@Html.DisplayFor(modelItem => item.Name)*@
            @Html.ActionLink(item.Name, "Details", "File", new { id = item.Id }, null)
        </td>
        <td>
            @*@Html.DisplayFor(modelItem => item.SizeInBytes)*@
            @{
                string size = string.Format("{0} Б", item.SizeInBytes);
                double sizeInKBytes, sizeInMBytes, sizeInGBytes;
                if (item.SizeInBytes >= 1024)
                {
                    sizeInKBytes = (double)item.SizeInBytes / 1024;
                    size = string.Format("{0:N2} КБ", sizeInKBytes);
                    if (sizeInKBytes >= 1024)
                    {
                        sizeInMBytes = (double)sizeInKBytes / 1024;
                        size = string.Format("{0:N2} МБ", sizeInMBytes);
                        if (sizeInMBytes >= 1024)
                        {
                            sizeInGBytes = (double)sizeInMBytes / 1024;
                            size = string.Format("{0:N2} ГБ", sizeInGBytes);
                        }
                    }
                }
            }
            @size
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.User.Login)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Date)
        </td>
        <td>
            @(item.AccessId == 1 ? "private" : "public")
        </td>
        <td>
            @Html.ActionLink("EditFile", "Manage", new { id = item.Id }, null) |
            @Html.ActionLink("Details", "Details", new { id = item.Id }) |
            @*@Html.ActionLink("Delete", "Delete", new { fileId = item.Id })|*@
            @*@Html.ActionLink("Delete", "Delete", "File", new { fileId = item.Id }, null)*@
            @Html.ActionLink("Скачать", "Download", new { fileId = item.Id })
        </td>
    </tr>
    }

</table>
<div class="btn-group">
    @Html.PageLinks(Model.PageInfo, x => Url.Action("Index", new { page = x }))
</div>